[
    {
        "id": "7ecc93ba9de9a905",
        "type": "tab",
        "label": "Flow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d23a252cb47d6cf0",
        "type": "mqtt in",
        "z": "7ecc93ba9de9a905",
        "name": "Subscribes to sensors & Read sensors' data",
        "topic": "house/mushroom/sensors",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "e113d6e6fc2869c2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 260,
        "wires": [
            [
                "9d8deb182408eecf"
            ]
        ]
    },
    {
        "id": "9d8deb182408eecf",
        "type": "function",
        "z": "7ecc93ba9de9a905",
        "name": "Extracts received sensors' data",
        "func": "return [\n    {payload: msg.payload.Airflow, topic: 'Airflow'},\n    {payload: msg.payload.Humidity, topic: 'Humidity'},\n    {payload: msg.payload.Light, topic: 'Light'},\n    {payload: msg.payload.Moisture, topic: 'Moisture'},\n    {payload: msg.payload.Temperature, topic: 'Temperature'}\n];",
        "outputs": 5,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 260,
        "wires": [
            [
                "967b2a805e84621b",
                "bbb2ffb8aec644ff"
            ],
            [
                "2d5f477c6dd80ea4",
                "93192f0ca9e52c9a"
            ],
            [
                "9bfbc18807a75156",
                "8e74eb0d386b1fce"
            ],
            [
                "e453d0879a34f2db",
                "73c89ced02ac0c1d"
            ],
            [
                "4f492d7a88c5b6ae",
                "1efc0b0890128099"
            ]
        ]
    },
    {
        "id": "967b2a805e84621b",
        "type": "ui_gauge",
        "z": "7ecc93ba9de9a905",
        "name": "Airflow gauge (m/s)",
        "group": "23ae10e4422eff7a",
        "order": 1,
        "width": "7",
        "height": "7",
        "gtype": "gage",
        "title": "Airflow",
        "label": "m/s",
        "format": "{{value}}",
        "min": "0.3",
        "max": "3",
        "colors": [
            "#ca3838",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "1",
        "seg2": "2.5",
        "diff": false,
        "className": "",
        "x": 950,
        "y": 80,
        "wires": []
    },
    {
        "id": "2d5f477c6dd80ea4",
        "type": "ui_gauge",
        "z": "7ecc93ba9de9a905",
        "name": "Humidity gauge (%)",
        "group": "23ae10e4422eff7a",
        "order": 2,
        "width": "7",
        "height": "7",
        "gtype": "gage",
        "title": "Humidity",
        "label": "%",
        "format": "{{value}}",
        "min": "75",
        "max": "95",
        "colors": [
            "#ca3838",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "85",
        "seg2": "92",
        "diff": false,
        "className": "",
        "x": 950,
        "y": 160,
        "wires": []
    },
    {
        "id": "e453d0879a34f2db",
        "type": "ui_gauge",
        "z": "7ecc93ba9de9a905",
        "name": "Moisture gauge (%)",
        "group": "23ae10e4422eff7a",
        "order": 4,
        "width": "7",
        "height": "7",
        "gtype": "gage",
        "title": "Moisture",
        "label": "%",
        "format": "{{value}}",
        "min": "50",
        "max": "70",
        "colors": [
            "#ca3838",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "55",
        "seg2": "65",
        "diff": false,
        "className": "",
        "x": 950,
        "y": 320,
        "wires": []
    },
    {
        "id": "4f492d7a88c5b6ae",
        "type": "ui_gauge",
        "z": "7ecc93ba9de9a905",
        "name": "Temperature gauge (°C)",
        "group": "23ae10e4422eff7a",
        "order": 5,
        "width": "7",
        "height": "7",
        "gtype": "gage",
        "title": "Temperature",
        "label": "°C",
        "format": "{{value}}",
        "min": "12",
        "max": "28",
        "colors": [
            "#ca3838",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "18",
        "seg2": "24",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 400,
        "wires": []
    },
    {
        "id": "9bfbc18807a75156",
        "type": "ui_gauge",
        "z": "7ecc93ba9de9a905",
        "name": "Light gauge",
        "group": "23ae10e4422eff7a",
        "order": 3,
        "width": "7",
        "height": "7",
        "gtype": "gage",
        "title": "Light",
        "label": "",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#ca3838",
            "#00b500",
            "#00b500"
        ],
        "seg1": "0",
        "seg2": "1",
        "diff": false,
        "className": "",
        "x": 930,
        "y": 240,
        "wires": []
    },
    {
        "id": "a8f32792d556e0de",
        "type": "ui_switch",
        "z": "7ecc93ba9de9a905",
        "name": "Ventilation fan toggle switch",
        "label": "Ventilation fan",
        "tooltip": "",
        "group": "64285ad3a6d498fb",
        "order": 1,
        "width": "5.83",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "Ventilation_fan",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1020,
        "y": 800,
        "wires": [
            [
                "8efa10ca906ba4c0"
            ]
        ]
    },
    {
        "id": "32eddc1ab335b644",
        "type": "ui_switch",
        "z": "7ecc93ba9de9a905",
        "name": "Humidifier toggle switch",
        "label": "Humidifier",
        "tooltip": "",
        "group": "64285ad3a6d498fb",
        "order": 2,
        "width": "5.83",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "Humidifier",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1010,
        "y": 840,
        "wires": [
            [
                "8efa10ca906ba4c0"
            ]
        ]
    },
    {
        "id": "9afcc22ff2c054fb",
        "type": "ui_switch",
        "z": "7ecc93ba9de9a905",
        "name": "LED grow lights toggle switch",
        "label": "LED grow lights",
        "tooltip": "",
        "group": "64285ad3a6d498fb",
        "order": 3,
        "width": "5.83",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "LED_grow_lights",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1020,
        "y": 880,
        "wires": [
            [
                "8efa10ca906ba4c0"
            ]
        ]
    },
    {
        "id": "58c4ff295478e185",
        "type": "ui_switch",
        "z": "7ecc93ba9de9a905",
        "name": "Water pump toggle switch",
        "label": "Water pump",
        "tooltip": "",
        "group": "64285ad3a6d498fb",
        "order": 4,
        "width": "5.83",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "Water_pump",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1010,
        "y": 920,
        "wires": [
            [
                "8efa10ca906ba4c0"
            ]
        ]
    },
    {
        "id": "b8b6dab5242f94a8",
        "type": "ui_switch",
        "z": "7ecc93ba9de9a905",
        "name": "Heater toggle switch",
        "label": "Heater",
        "tooltip": "",
        "group": "64285ad3a6d498fb",
        "order": 5,
        "width": "5.83",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "Heater",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1000,
        "y": 960,
        "wires": [
            [
                "8efa10ca906ba4c0"
            ]
        ]
    },
    {
        "id": "e650b008cbbd5c11",
        "type": "ui_switch",
        "z": "7ecc93ba9de9a905",
        "name": "Cooler toggle switch",
        "label": "Cooler",
        "tooltip": "",
        "group": "64285ad3a6d498fb",
        "order": 6,
        "width": "5.83",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "Cooler",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1000,
        "y": 1000,
        "wires": [
            [
                "8efa10ca906ba4c0"
            ]
        ]
    },
    {
        "id": "66a9c3390aad0c2c",
        "type": "ui_switch",
        "z": "7ecc93ba9de9a905",
        "name": "Auto Airflow Control toggle switch",
        "label": "Auto Airflow Control",
        "tooltip": "",
        "group": "668c067bc11cd608",
        "order": 1,
        "width": "7",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "Airflow",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1060,
        "y": 540,
        "wires": [
            [
                "e274d36e83643727"
            ]
        ]
    },
    {
        "id": "a9f2b916ba28977b",
        "type": "ui_switch",
        "z": "7ecc93ba9de9a905",
        "name": "Auto Humidity Control toggle switch",
        "label": "Auto Humidity Control",
        "tooltip": "",
        "group": "668c067bc11cd608",
        "order": 2,
        "width": "7",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "Humidity",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1060,
        "y": 580,
        "wires": [
            [
                "e274d36e83643727"
            ]
        ]
    },
    {
        "id": "b0d1fe124a383dc7",
        "type": "ui_switch",
        "z": "7ecc93ba9de9a905",
        "name": "Auto Light Control toggle switch",
        "label": "Auto Light Control",
        "tooltip": "",
        "group": "668c067bc11cd608",
        "order": 3,
        "width": "7",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "Light",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1050,
        "y": 620,
        "wires": [
            [
                "e274d36e83643727"
            ]
        ]
    },
    {
        "id": "46f5b8f44aeb13e2",
        "type": "ui_switch",
        "z": "7ecc93ba9de9a905",
        "name": "Auto Moisture Control toggle switch",
        "label": "Auto Moisture Control",
        "tooltip": "",
        "group": "668c067bc11cd608",
        "order": 4,
        "width": "7",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "Moisture",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1060,
        "y": 660,
        "wires": [
            [
                "e274d36e83643727"
            ]
        ]
    },
    {
        "id": "abe04deb476d88f2",
        "type": "ui_switch",
        "z": "7ecc93ba9de9a905",
        "name": "Auto Temperature Control toggle switch",
        "label": "Auto Temperature Control",
        "tooltip": "",
        "group": "668c067bc11cd608",
        "order": 5,
        "width": "7",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "Temperature",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1080,
        "y": 700,
        "wires": [
            [
                "e274d36e83643727"
            ]
        ]
    },
    {
        "id": "1b6641aef98e135e",
        "type": "mqtt in",
        "z": "7ecc93ba9de9a905",
        "name": "Subscribes to automation & Read automation data",
        "topic": "house/mushroom/automation",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "e113d6e6fc2869c2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 620,
        "wires": [
            [
                "0394f9cb02afb442",
                "955b3d04a95f7c70"
            ]
        ]
    },
    {
        "id": "955b3d04a95f7c70",
        "type": "function",
        "z": "7ecc93ba9de9a905",
        "name": "Extracts received automation data",
        "func": "if (typeof msg.payload === \"object\" && msg.payload !== null)\n    flow.set(\"automationStates\", msg.payload);\n    \nreturn [\n    {payload: msg.payload.Airflow},\n    {payload: msg.payload.Humidity},\n    {payload: msg.payload.Light},\n    {payload: msg.payload.Moisture},\n    {payload: msg.payload.Temperature}\n];",
        "outputs": 5,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 620,
        "wires": [
            [
                "66a9c3390aad0c2c",
                "5e13072d8a304035"
            ],
            [
                "a9f2b916ba28977b",
                "5e13072d8a304035"
            ],
            [
                "b0d1fe124a383dc7",
                "5e13072d8a304035"
            ],
            [
                "46f5b8f44aeb13e2",
                "5e13072d8a304035"
            ],
            [
                "abe04deb476d88f2",
                "5e13072d8a304035"
            ]
        ]
    },
    {
        "id": "36a487272dd180c1",
        "type": "mqtt in",
        "z": "7ecc93ba9de9a905",
        "name": "Subscribes to actuators & Read actuators' data",
        "topic": "house/mushroom/actuators",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "e113d6e6fc2869c2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 900,
        "wires": [
            [
                "530e679e0f038c38",
                "60c9c69b3b64c829"
            ]
        ]
    },
    {
        "id": "60c9c69b3b64c829",
        "type": "function",
        "z": "7ecc93ba9de9a905",
        "name": "Extracts received actuators' data",
        "func": "if (typeof msg.payload === \"object\" && msg.payload !== null)\n    flow.set(\"actuatorStates\", msg.payload);\n\nreturn [\n    {payload: msg.payload.Ventilation_fan},\n    {payload: msg.payload.Humidifier},\n    {payload: msg.payload.LED_grow_lights},\n    {payload: msg.payload.Water_pump},\n    {payload: msg.payload.Heater},\n    {payload: msg.payload.Cooler}\n];",
        "outputs": 6,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 900,
        "wires": [
            [
                "a8f32792d556e0de",
                "9528ebeae1b9d5a9"
            ],
            [
                "32eddc1ab335b644",
                "9528ebeae1b9d5a9"
            ],
            [
                "9afcc22ff2c054fb",
                "9528ebeae1b9d5a9"
            ],
            [
                "58c4ff295478e185",
                "9528ebeae1b9d5a9"
            ],
            [
                "b8b6dab5242f94a8",
                "9528ebeae1b9d5a9"
            ],
            [
                "e650b008cbbd5c11",
                "9528ebeae1b9d5a9"
            ]
        ]
    },
    {
        "id": "bbb2ffb8aec644ff",
        "type": "ui_chart",
        "z": "7ecc93ba9de9a905",
        "name": "Airflow line chart",
        "group": "23ae10e4422eff7a",
        "order": 5,
        "width": "7",
        "height": "7",
        "label": "Airflow",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0.3",
        "ymax": "3",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 940,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "93192f0ca9e52c9a",
        "type": "ui_chart",
        "z": "7ecc93ba9de9a905",
        "name": "Humidity line chart",
        "group": "23ae10e4422eff7a",
        "order": 5,
        "width": "7",
        "height": "7",
        "label": "Humidity",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "75",
        "ymax": "95",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 950,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "8e74eb0d386b1fce",
        "type": "ui_chart",
        "z": "7ecc93ba9de9a905",
        "name": "Light line chart",
        "group": "23ae10e4422eff7a",
        "order": 5,
        "width": "7",
        "height": "7",
        "label": "Light",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 940,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "73c89ced02ac0c1d",
        "type": "ui_chart",
        "z": "7ecc93ba9de9a905",
        "name": "Moisture line chart",
        "group": "23ae10e4422eff7a",
        "order": 5,
        "width": "7",
        "height": "7",
        "label": "Moisture",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "50",
        "ymax": "70",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 950,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "1efc0b0890128099",
        "type": "ui_chart",
        "z": "7ecc93ba9de9a905",
        "name": "Temperature line chart",
        "group": "23ae10e4422eff7a",
        "order": 5,
        "width": "7",
        "height": "7",
        "label": "Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "12",
        "ymax": "28",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 960,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "0394f9cb02afb442",
        "type": "debug",
        "z": "7ecc93ba9de9a905",
        "name": "automation sub debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 560,
        "wires": []
    },
    {
        "id": "530e679e0f038c38",
        "type": "debug",
        "z": "7ecc93ba9de9a905",
        "name": "actuators sub debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 820,
        "wires": []
    },
    {
        "id": "5e13072d8a304035",
        "type": "debug",
        "z": "7ecc93ba9de9a905",
        "name": "Automation toggle switches debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 500,
        "wires": []
    },
    {
        "id": "9528ebeae1b9d5a9",
        "type": "debug",
        "z": "7ecc93ba9de9a905",
        "name": "Actuator toggle switches debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 760,
        "wires": []
    },
    {
        "id": "2530387d2fac1558",
        "type": "mqtt out",
        "z": "7ecc93ba9de9a905",
        "name": "Subscribes to actuators & Publish actuators data",
        "topic": "house/mushroom/actuators",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e113d6e6fc2869c2",
        "x": 2060,
        "y": 900,
        "wires": []
    },
    {
        "id": "419421496c74ee4b",
        "type": "function",
        "z": "7ecc93ba9de9a905",
        "name": "Combines all actuators' data",
        "func": "let actuators = flow.get(\"actuatorStates\");\nlet key = msg.topic;\nlet previous = actuators[key];\nlet newValue = msg.payload;\n\nactuators[key] = newValue;\nactuators[\"Timestamp\"] = new Date().toLocaleString();\n\nflow.set(\"actuatorStates\", actuators);\n\n// Only publish if this came from user interaction AND value changed\nif (msg.source === \"ui\" && previous !== newValue)\n    return {\n        topic: \"house/mushroom/actuators\",\n        payload: actuators,\n        retain: true\n    };\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 900,
        "wires": [
            [
                "2530387d2fac1558",
                "c2d3b1bd8d5eeeae"
            ]
        ]
    },
    {
        "id": "09a8a22197375745",
        "type": "mqtt out",
        "z": "7ecc93ba9de9a905",
        "name": "Subscribes to automation & Publish automation data",
        "topic": "house/mushroom/automation",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e113d6e6fc2869c2",
        "x": 2200,
        "y": 620,
        "wires": []
    },
    {
        "id": "f9676f6123145502",
        "type": "function",
        "z": "7ecc93ba9de9a905",
        "name": "Combines all automation data",
        "func": "let automation = flow.get(\"automationStates\");\nlet key = msg.topic;\nlet previous = automation[key];\nlet newValue = msg.payload;\n\nautomation[key] = newValue;\nautomation[\"Timestamp\"] = new Date().toLocaleString();\n\nflow.set(\"automationStates\", automation);\n\n// Only publish if this came from user interaction AND value changed\nif (msg.source === \"ui\" && previous !== newValue)\n    return {\n        topic: \"house/mushroom/automation\",\n        payload: automation,\n        retain: true\n    };\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 620,
        "wires": [
            [
                "09a8a22197375745",
                "708d8e54e1bd3945"
            ]
        ]
    },
    {
        "id": "e274d36e83643727",
        "type": "change",
        "z": "7ecc93ba9de9a905",
        "name": "Change for automation",
        "rules": [
            {
                "t": "set",
                "p": "source",
                "pt": "msg",
                "to": "ui",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 620,
        "wires": [
            [
                "f9676f6123145502"
            ]
        ]
    },
    {
        "id": "8efa10ca906ba4c0",
        "type": "change",
        "z": "7ecc93ba9de9a905",
        "name": "Change for actuators",
        "rules": [
            {
                "t": "set",
                "p": "source",
                "pt": "msg",
                "to": "ui",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 900,
        "wires": [
            [
                "419421496c74ee4b"
            ]
        ]
    },
    {
        "id": "708d8e54e1bd3945",
        "type": "debug",
        "z": "7ecc93ba9de9a905",
        "name": "automation pub debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2100,
        "y": 580,
        "wires": []
    },
    {
        "id": "c2d3b1bd8d5eeeae",
        "type": "debug",
        "z": "7ecc93ba9de9a905",
        "name": "actuators pub debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1980,
        "y": 860,
        "wires": []
    },
    {
        "id": "e113d6e6fc2869c2",
        "type": "mqtt-broker",
        "name": "Mosquitto MQTT Broker",
        "broker": "localhost",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "23ae10e4422eff7a",
        "type": "ui_group",
        "name": "sensors",
        "tab": "2cb037ebed76ceed",
        "order": 1,
        "disp": true,
        "width": "35",
        "collapse": false,
        "className": ""
    },
    {
        "id": "64285ad3a6d498fb",
        "type": "ui_group",
        "name": "actuators",
        "tab": "2cb037ebed76ceed",
        "order": 3,
        "disp": true,
        "width": "35",
        "collapse": false,
        "className": ""
    },
    {
        "id": "668c067bc11cd608",
        "type": "ui_group",
        "name": "automation",
        "tab": "2cb037ebed76ceed",
        "order": 2,
        "disp": true,
        "width": "35",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2cb037ebed76ceed",
        "type": "ui_tab",
        "name": "mushroom_house",
        "icon": "mdi-mushroom",
        "disabled": false,
        "hidden": false
    }
]